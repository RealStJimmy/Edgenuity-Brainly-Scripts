{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"Edgenuity Easy Brainly Search","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://*.core.learn.edgenuity.com/Player/"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]}},"storage":{"ts":1604323243785,"data":{}},"enabled":true,"position":1,"file_url":"https://raw.githubusercontent.com/Subatomicmc/Edgenuity-Brainly-Scripts/master/EdgenuityEasyBrainlySearch.user.js","uuid":"84ce4e2a-a073-480e-bfa9-946c83610d5d","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBFZGdlbnVpdHkgRWFzeSBCcmFpbmx5IFNlYXJjaAovLyBAbmFtZXNwYWNlICAgIHJlZGRpdC5jb20vdS9zdWJhdG9taWNtYwovLyBAdmVyc2lvbiAgICAgIDIKLy8gQGRlc2NyaXB0aW9uICBhZGRzIHNvbWUgZWFzeSBzZWFyY2hpbmcKLy8gQGF1dGhvciAgICAgICBTdWJhdG9taWNtYwovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vKi5jb3JlLmxlYXJuLmVkZ2VudWl0eS5jb20vUGxheWVyLwovLyBAZ3JhbnQgICAgICAgIG5vbmUKLy8gPT0vVXNlclNjcmlwdD09CgooZnVuY3Rpb24oKSB7CnZhciBfMHg1ZWVjPVsnMU1YUklLZCcsJ2NyZWF0ZUVsZW1lbnQnLCdvbm1vdXNlZG93bicsJ3N0eWxlJywncmVtb3ZlQWxsUmFuZ2VzJywnY2xpZW50WCcsJzQyNzM3NklHYWZ1VScsJ2h0dHBzOi8vYnJhaW5seS5jb20vYXBwL2Fzaz9lbnRyeT10b3AmcT0nLCdvbm1vdXNldXAnLCd2aXNpYmlsaXR5JywnZ2V0Qm91bmRpbmdDbGllbnRSZWN0JywnX2JsYW5rJywndG9wJywnNzg3ODVxTXRNUUYnLCcyU3hFWGRaJywnYm9keScsJ2NvbnRlbnRXaW5kb3cnLCdhcHBlbmQnLCdnZXRFbGVtZW50QnlJZCcsJ2VtcHR5Jywnc2VhcmNoQnV0dG9uJywnb3BlbicsJ2xlZnQnLCczODU0MTIyTXp3dlhVJywndG9TdHJpbmcnLCd2aXNpYmxlJywnc2VsZWN0aW9uJywnZ2V0U2VsZWN0aW9uJywnMTdsY2F6UUknLCcxMTc0ODg1bktDbldkJywnb25jbGljaycsJzMyMjUxZmVIY0hNJywnc3RhZ2VGcmFtZScsJzdFdXV4RVEnLCdwb3NpdGlvbicsJzUyNjEzOWhBcURMVScsJ2J1dHRvbicsJ2Fic29sdXRlJywnaW5uZXJUZXh0JywnaUZyYW1lUHJldmlldycsJ2NsaWVudFknLCdjb250ZW50RG9jdW1lbnQnLCc3MDk0NTRXZWp6Z3gnXTt2YXIgXzB4NDcwNz1mdW5jdGlvbihfMHg1MDQ1NTQsXzB4NTkxYTE0KXtfMHg1MDQ1NTQ9XzB4NTA0NTU0LTB4YjA7dmFyIF8weDVlZWNlMz1fMHg1ZWVjW18weDUwNDU1NF07cmV0dXJuIF8weDVlZWNlMzt9O3ZhciBfMHg4OWJlNmQ9XzB4NDcwNzsoZnVuY3Rpb24oXzB4NDQyNWUyLF8weGZiOWU2NCl7dmFyIF8weDFiNTIyMj1fMHg0NzA3O3doaWxlKCEhW10pe3RyeXt2YXIgXzB4NWI2YTc4PXBhcnNlSW50KF8weDFiNTIyMigweGI5KSkrcGFyc2VJbnQoXzB4MWI1MjIyKDB4ZDUpKSpwYXJzZUludChfMHgxYjUyMjIoMHhiZikpK3BhcnNlSW50KF8weDFiNTIyMigweGM2KSkrcGFyc2VJbnQoXzB4MWI1MjIyKDB4Y2QpKSpwYXJzZUludChfMHgxYjUyMjIoMHhjNykpK3BhcnNlSW50KF8weDFiNTIyMigweGQ0KSkqcGFyc2VJbnQoXzB4MWI1MjIyKDB4YmQpKSstcGFyc2VJbnQoXzB4MWI1MjIyKDB4YjgpKSotcGFyc2VJbnQoXzB4MWI1MjIyKDB4YmIpKSstcGFyc2VJbnQoXzB4MWI1MjIyKDB4YjMpKTtpZihfMHg1YjZhNzg9PT1fMHhmYjllNjQpYnJlYWs7ZWxzZSBfMHg0NDI1ZTJbJ3B1c2gnXShfMHg0NDI1ZTJbJ3NoaWZ0J10oKSk7fWNhdGNoKF8weDUzZmI3MCl7XzB4NDQyNWUyWydwdXNoJ10oXzB4NDQyNWUyWydzaGlmdCddKCkpO319fShfMHg1ZWVjLDB4OTRkNjEpKTt2YXIgSW5uZXJGcmFtZUlzQ3VycmVudD0hW10sdGhlRG9jdW1lbnQ9ZG9jdW1lbnRbXzB4ODliZTZkKDB4ZDkpXShfMHg4OWJlNmQoMHhiYykpW18weDg5YmU2ZCgweGM1KV0sdGhlV2luZG93PWRvY3VtZW50W18weDg5YmU2ZCgweGQ5KV0oXzB4ODliZTZkKDB4YmMpKVtfMHg4OWJlNmQoMHhkNyldLGZyYW1lQm9keT1kb2N1bWVudFtfMHg4OWJlNmQoMHhkOSldKF8weDg5YmU2ZCgweGJjKSksYnV0dG9ucHJlc3NlZD0hW10sYnV0dG9uPWRvY3VtZW50W18weDg5YmU2ZCgweGM4KV0oXzB4ODliZTZkKDB4YzApKTtidXR0b25bJ2lkJ109XzB4ODliZTZkKDB4YjApLGJ1dHRvbltfMHg4OWJlNmQoMHhjMildPSdTZWFyY2hceDIwb25ceDIwQnJhaW5seScsYnV0dG9uW18weDg5YmU2ZCgweGNhKV1bXzB4ODliZTZkKDB4YmUpXT1fMHg4OWJlNmQoMHhjMSksYnV0dG9uW18weDg5YmU2ZCgweGNhKV1bXzB4ODliZTZkKDB4ZDApXT1fMHg4OWJlNmQoMHhiNSksZG9jdW1lbnRbJ2JvZHknXVtfMHg4OWJlNmQoMHhkOCldKGJ1dHRvbiksZG9jdW1lbnRbXzB4ODliZTZkKDB4ZDkpXSgnc2VhcmNoQnV0dG9uJylbXzB4ODliZTZkKDB4YmEpXT1mdW5jdGlvbigpe3ZhciBfMHg0MTliYzY9XzB4ODliZTZkO2J1dHRvbnByZXNzZWQ9ISFbXTt2YXIgXzB4OWNhMzM0PV8weDQxOWJjNigweGNlKStlbmNvZGVVUklDb21wb25lbnQodGhlRG9jdW1lbnRbXzB4NDE5YmM2KDB4YjcpXSgpW18weDQxOWJjNigweGI0KV0oKSk7d2luZG93W18weDQxOWJjNigweGIxKV0oXzB4OWNhMzM0LF8weDQxOWJjNigweGQyKSk7fSxzZXRJbnRlcnZhbChhZGR0aGVzdHVmZiwweDEyYyk7ZnVuY3Rpb24gYWRkdGhlc3R1ZmYoKXt2YXIgXzB4NTFhNjUwPV8weDg5YmU2ZCxfMHgxOWM5ZTc9ZG9jdW1lbnRbJ2dldEVsZW1lbnRCeUlkJ10oXzB4NTFhNjUwKDB4YmMpKTsoXzB4MTljOWU3W18weDUxYTY1MCgweGM1KV1bXzB4NTFhNjUwKDB4ZDkpXShfMHg1MWE2NTAoMHhjMykpIT1udWxsfHxJbm5lckZyYW1lSXNDdXJyZW50PT0hIVtdKSYmKF8weDE5YzllNz1fMHgxOWM5ZTdbXzB4NTFhNjUwKDB4YzUpXVtfMHg1MWE2NTAoMHhkOSldKF8weDUxYTY1MCgweGMzKSksSW5uZXJGcmFtZUlzQ3VycmVudD0hIVtdKSxfMHgxOWM5ZTchPW51bGwmJigoXzB4MTljOWU3W18weDUxYTY1MCgweGM5KV09PW51bGx8fF8weDE5YzllN1snb25tb3VzZXVwJ109PW51bGwpJiYodGhlRG9jdW1lbnQ9XzB4MTljOWU3W18weDUxYTY1MCgweGM1KV0sdGhlV2luZG93PV8weDE5YzllN1tfMHg1MWE2NTAoMHhkNyldLF8weDE5YzllN1tfMHg1MWE2NTAoMHhjNSldW18weDUxYTY1MCgweGQ2KV1bXzB4NTFhNjUwKDB4Y2YpXT1tb3VzZXVwLF8weDE5YzllN1tfMHg1MWE2NTAoMHhjNSldW18weDUxYTY1MCgweGQ2KV1bJ29ubW91c2Vkb3duJ109bW91c2Vkb3duKSk7fWZ1bmN0aW9uIG1vdXNldXAoXzB4NGFiYmY5KXt2YXIgXzB4NDA1ZjMwPV8weDg5YmU2ZCxfMHgxMzlmNGY9dGhlRG9jdW1lbnRbXzB4NDA1ZjMwKDB4YjcpXSgpW18weDQwNWYzMCgweGI0KV0oKTtpZihidXR0b25wcmVzc2VkPT0hW10mJl8weDEzOWY0ZiE9Jycpe3ZhciBfMHg1OGY2NTY9ZnJhbWVCb2R5W18weDQwNWYzMCgweGQxKV0oKTtidXR0b25bJ3N0eWxlJ11bXzB4NDA1ZjMwKDB4ZDApXT1fMHg0MDVmMzAoMHhiNSksYnV0dG9uW18weDQwNWYzMCgweGNhKV1bXzB4NDA1ZjMwKDB4ZDMpXT1fMHg0YWJiZjlbXzB4NDA1ZjMwKDB4YzQpXStfMHg1OGY2NTZbJ3knXSsweGErJ3B4JyxidXR0b25bJ3N0eWxlJ11bXzB4NDA1ZjMwKDB4YjIpXT1fMHg0YWJiZjlbXzB4NDA1ZjMwKDB4Y2MpXStfMHg1OGY2NTZbJ3gnXSsncHgnO31lbHNlIGJ1dHRvbnByZXNzZWQ9IVtdO31mdW5jdGlvbiBtb3VzZWRvd24oXzB4MzdkNjdiKXt2YXIgXzB4MjRjYzUzPV8weDg5YmU2ZDtkb2N1bWVudFtfMHgyNGNjNTMoMHhkOSldKF8weDI0Y2M1MygweGIwKSlbXzB4MjRjYzUzKDB4Y2EpXVtfMHgyNGNjNTMoMHhkMCldPSdoaWRkZW4nO2lmKHRoZVdpbmRvd1tfMHgyNGNjNTMoMHhiNyldKXtpZih0aGVXaW5kb3dbJ2dldFNlbGVjdGlvbiddKClbXzB4MjRjYzUzKDB4ZGEpXSl0aGVXaW5kb3dbXzB4MjRjYzUzKDB4YjcpXSgpWydlbXB0eSddKCk7ZWxzZSB0aGVXaW5kb3dbXzB4MjRjYzUzKDB4YjcpXSgpW18weDI0Y2M1MygweGNiKV0mJnRoZVdpbmRvd1tfMHgyNGNjNTMoMHhiNyldKClbXzB4MjRjYzUzKDB4Y2IpXSgpO31lbHNlIHRoZURvY3VtZW50W18weDI0Y2M1MygweGI2KV0mJnRoZURvY3VtZW50W18weDI0Y2M1MygweGI2KV1bXzB4MjRjYzUzKDB4ZGEpXSgpO30KfSkoKTsK"},{"name":"Assignment Unlocker","options":{"awareOfChrome":false,"check_for_updates":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://student.edgenuity.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1604323247676,"data":{}},"enabled":true,"position":2,"file_url":"https://github.com/Subatomicmc/Edgenuity-Brainly-Scripts/raw/master/AssignmentUnlocker.user.js","uuid":"06c74b31-bda1-4aa5-bdc9-34430469cea6","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBBc3NpZ25tZW50IFVubG9ja2VyCi8vIEBuYW1lc3BhY2UgICAgaHR0cDovL3RhbXBlcm1vbmtleS5uZXQvCi8vIEB2ZXJzaW9uICAgICAgMS4yLjEKLy8gQGRlc2NyaXB0aW9uICBMZXRzIHlvdSBzdGFydCBsb2NrZWQgYXNzaWdubWVudHMKLy8gQGF1dGhvciAgICAgICBTdWJhdG9taWNNQwovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vc3R1ZGVudC5lZGdlbnVpdHkuY29tLyoKLy8gQGdyYW50ICAgICAgICBub25lCi8vID09L1VzZXJTY3JpcHQ9PQoKKGZ1bmN0aW9uKCkgewogICAgLy8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBBc3NpZ25tZW50IFVubG9ja2VyCi8vIEBuYW1lc3BhY2UgICAgaHR0cDovL3RhbXBlcm1vbmtleS5uZXQvCi8vIEB2ZXJzaW9uICAgICAgMS4yLjEKLy8gQGRlc2NyaXB0aW9uICBMZXRzIHlvdSBzdGFydCBsb2NrZWQgYXNzaWdubWVudHMKLy8gQGF1dGhvciAgICAgICBTdWJhdG9taWNNQwovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vc3R1ZGVudC5lZGdlbnVpdHkuY29tLyoKLy8gQGdyYW50ICAgICAgICBub25lCi8vID09L1VzZXJTY3JpcHQ9PQoKKGZ1bmN0aW9uKCkgewogICAgdmFyIF8weDc4OGU9WydocmVmJywnOThFWlRGb04nLCcxMDc4MjkzRXFFUHJyJywnc3Vic3RyJywnMTY4NTk2NFZYZU5sTycsJ2xvY2F0aW9uJywnbGVuZ3RoJywnMWpJek1ydCcsJ2NoYXJBdCcsJzUwODY2MWlPRE5FQicsJzU4NmhBd3pRTicsJzI5ODNuVUlpWmgnLCdsb2cnLCdzdWJzdHJpbmcnLCdlbnJvbGxtZW50JywnZ2V0RWxlbWVudHNCeUNsYXNzTmFtZScsJy5jb3JlLmxlYXJuLmVkZ2VudWl0eS5jb20vbG1zYXBpL3NsZS9hcGkvZW5yb2xsbWVudHMvJywnMTQzNzFSYnRlbnUnLCdjbGFzc0xpc3QnLCdvbmNsaWNrJywnQWN0aXZpdHlUaWxlLXN0YXR1cy1nYXRlZCcsJ3NwbGl0Jywnc2V0QXR0cmlidXRlJywnY29udGFpbnMnLCdkb2N1bWVudC5sb2NhdGlvbj1ceDI3JywnY29va2llJywnY291cnNlLXRpbWVsaW5lJywnODU2Mjk5RlFyV1FSJywnaW5kZXhPZicsJ2FkZGVkTm9kZXMnLCcyOTk2NDI5VkhsY2hIJywnaXNceDIwdGltZWxpbmUnLCcvL3InLCdmb3VuZFx4MjBsb2NrZWRceDIwYnV0dG9uJywnL2FjdGl2aXR5LycsJ3VzZVx4MjBzdHJpY3QnLCdSZWFsbScsJ2h0dHBzOi8vc3R1ZGVudC5lZGdlbnVpdHkuY29tL2Vucm9sbG1lbnQvJywncGFyc2UnLCcxWG9sVFBQJ107dmFyIF8weDRhOGM9ZnVuY3Rpb24oXzB4MjNmNzlkLF8weDIxNDljMSl7XzB4MjNmNzlkPV8weDIzZjc5ZC0weDE0Mzt2YXIgXzB4Nzg4ZWJiPV8weDc4OGVbXzB4MjNmNzlkXTtyZXR1cm4gXzB4Nzg4ZWJiO307dmFyIF8weDM4NTQ4MT1fMHg0YThjOyhmdW5jdGlvbihfMHg0NGMyNGEsXzB4MmUwZjUxKXt2YXIgXzB4NTU3MjRjPV8weDRhOGM7d2hpbGUoISFbXSl7dHJ5e3ZhciBfMHgzNTcwYzE9cGFyc2VJbnQoXzB4NTU3MjRjKDB4MTVhKSkqcGFyc2VJbnQoXzB4NTU3MjRjKDB4MTU5KSkrcGFyc2VJbnQoXzB4NTU3MjRjKDB4MTU2KSkqcGFyc2VJbnQoXzB4NTU3MjRjKDB4MTUxKSkrLXBhcnNlSW50KF8weDU1NzI0YygweDE1MykpKy1wYXJzZUludChfMHg1NTcyNGMoMHgxNTgpKSotcGFyc2VJbnQoXzB4NTU3MjRjKDB4MTRlKSkrLXBhcnNlSW50KF8weDU1NzI0YygweDE1MCkpKi1wYXJzZUludChfMHg1NTcyNGMoMHgxNjApKStwYXJzZUludChfMHg1NTcyNGMoMHgxNmEpKSstcGFyc2VJbnQoXzB4NTU3MjRjKDB4MTQ1KSk7aWYoXzB4MzU3MGMxPT09XzB4MmUwZjUxKWJyZWFrO2Vsc2UgXzB4NDRjMjRhWydwdXNoJ10oXzB4NDRjMjRhWydzaGlmdCddKCkpO31jYXRjaChfMHg1NjFjMmMpe18weDQ0YzI0YVsncHVzaCddKF8weDQ0YzI0YVsnc2hpZnQnXSgpKTt9fX0oXzB4Nzg4ZSwweGRmZjA4KSk7dmFyIHVybCxvYnNlcnZlclRpbWVvdXQ7XzB4Mzg1NDgxKDB4MTRhKTtmdW5jdGlvbiByZWFkQ29va2llKF8weDU3OGRmMil7dmFyIF8weDFhNWQwYz1fMHgzODU0ODEsXzB4M2FiMDE4PV8weDU3OGRmMisnPScsXzB4NGM4OGY4PWRvY3VtZW50W18weDFhNWQwYygweDE2OCldW18weDFhNWQwYygweDE2NCldKCc7Jyk7Zm9yKHZhciBfMHgzZWIzOGY9MHgwO18weDNlYjM4ZjxfMHg0Yzg4ZjhbJ2xlbmd0aCddO18weDNlYjM4ZisrKXt2YXIgXzB4MjdiYjRjPV8weDRjODhmOFtfMHgzZWIzOGZdO3doaWxlKF8weDI3YmI0Y1tfMHgxYTVkMGMoMHgxNTcpXSgweDApPT0nXHgyMCcpXzB4MjdiYjRjPV8weDI3YmI0Y1tfMHgxYTVkMGMoMHgxNWMpXSgweDEsXzB4MjdiYjRjWydsZW5ndGgnXSk7aWYoXzB4MjdiYjRjW18weDFhNWQwYygweDE0MyldKF8weDNhYjAxOCk9PTB4MClyZXR1cm4gXzB4MjdiYjRjW18weDFhNWQwYygweDE1YyldKF8weDNhYjAxOFtfMHgxYTVkMGMoMHgxNTUpXSxfMHgyN2JiNGNbXzB4MWE1ZDBjKDB4MTU1KV0pO31yZXR1cm4gbnVsbDt9ZnVuY3Rpb24gY2hlY2tVUkwoKXt2YXIgXzB4MWI1YWYwPV8weDM4NTQ4MTt1cmwhPWRvY3VtZW50W18weDFiNWFmMCgweDE1NCldW18weDFiNWFmMCgweDE0ZildJiYodXJsPWRvY3VtZW50W18weDFiNWFmMCgweDE1NCldW18weDFiNWFmMCgweDE0ZildLGNsZWFyVGltZW91dChvYnNlcnZlclRpbWVvdXQpLGNvbnNvbGVbXzB4MWI1YWYwKDB4MTViKV0oJ3VybFx4MjBjaGFuZ2VkJyksdXJsW18weDFiNWFmMCgweDE0MyldKF8weDFiNWFmMCgweDE0YykpIT0tMHgxJiYoY29uc29sZVtfMHgxYjVhZjAoMHgxNWIpXShfMHgxYjVhZjAoMHgxNDYpKSx0cnlUb1N0YXJ0T2JzZXJ2ZXIoKSkpO31mdW5jdGlvbiB0cnlUb1N0YXJ0T2JzZXJ2ZXIoKXt2YXIgXzB4MmM0MWFjPV8weDM4NTQ4MTtpZihkb2N1bWVudFtfMHgyYzQxYWMoMHgxNWUpXShfMHgyYzQxYWMoMHgxNjkpKVsnbGVuZ3RoJ109PTB4MCl7c2V0VGltZW91dCh0cnlUb1N0YXJ0T2JzZXJ2ZXIsMHg2NCksY29uc29sZVtfMHgyYzQxYWMoMHgxNWIpXSgnY2FudFx4MjBmaW5kXHgyMHRpbWVsaW5lLlx4MjB3YWl0aW5nJyk7cmV0dXJuO312YXIgXzB4MzIzMzgwPUpTT05bXzB4MmM0MWFjKDB4MTRkKV0ocmVhZENvb2tpZSgnVG9rZW5EYXRhJykpW18weDJjNDFhYygweDE0YildWyd0b1N0cmluZyddKCksXzB4NGE1YjdjPWRvY3VtZW50Wydsb2NhdGlvbiddW18weDJjNDFhYygweDE0ZildLF8weDI0YmVkMD1fMHg0YTViN2NbXzB4MmM0MWFjKDB4MTQzKV0oXzB4MmM0MWFjKDB4MTVkKSkrMHhiLF8weDEwOTdmNz1fMHg0YTViN2NbXzB4MmM0MWFjKDB4MTUyKV0oXzB4MjRiZWQwLDB4MjQpLF8weDE4MTMzND1fMHgyYzQxYWMoMHgxNDcpKyhfMHgzMjMzODBbXzB4MmM0MWFjKDB4MTU1KV09PTB4MT8nMCc6JycpK18weDMyMzM4MCtfMHgyYzQxYWMoMHgxNWYpK18weDEwOTdmNytfMHgyYzQxYWMoMHgxNDkpLF8weDQ5MzU1YT1udWxsO2Zvcih2YXIgXzB4NDZjNTA2IG9mIGRvY3VtZW50W18weDJjNDFhYygweDE1ZSldKF8weDJjNDFhYygweDE2MykpKXtfMHg0NmM1MDZbXzB4MmM0MWFjKDB4MTY1KV0oXzB4MmM0MWFjKDB4MTYyKSwnZG9jdW1lbnQubG9jYXRpb249XHgyNycrXzB4MTgxMzM0K18weDQ2YzUwNlsnaWQnXSsnXHgyNycpO31mdW5jdGlvbiBfMHgzMTY1MTkoXzB4MjhmMmRiLF8weDM5MzgwYSl7dmFyIF8weDQ0ZGE4NT1fMHgyYzQxYWM7Zm9yKGNvbnN0IF8weDUwOTQxYSBvZiBfMHgyOGYyZGIpe2Zvcih2YXIgXzB4NGZiYTI4IG9mIF8weDUwOTQxYVtfMHg0NGRhODUoMHgxNDQpXSl7KF8weDRmYmEyOFtfMHg0NGRhODUoMHgxNjEpXVtfMHg0NGRhODUoMHgxNjYpXShfMHg0NGRhODUoMHgxNjMpKXx8XzB4NGZiYTI4W18weDQ0ZGE4NSgweDE2MSldW18weDQ0ZGE4NSgweDE2NildKCdBY3Rpdml0eVRpbGUtc3RhdHVzLWxvY2tlZCcpKSYmKGNvbnNvbGVbJ2xvZyddKF8weDQ0ZGE4NSgweDE0OCkpLF8weDQ5MzU1YT1fMHg0ZmJhMjgsXzB4NGZiYTI4W18weDQ0ZGE4NSgweDE2NSldKCdvbmNsaWNrJyxfMHg0NGRhODUoMHgxNjcpK18weDE4MTMzNCtfMHg0ZmJhMjhbJ2lkJ10rJ1x4MjcnKSk7fX19dmFyIF8weDdhNjYwZT1uZXcgTXV0YXRpb25PYnNlcnZlcihfMHgzMTY1MTkpO18weDdhNjYwZVsnb2JzZXJ2ZSddKGRvY3VtZW50WydnZXRFbGVtZW50c0J5Q2xhc3NOYW1lJ10oXzB4MmM0MWFjKDB4MTY5KSlbMHgwXSx7J2F0dHJpYnV0ZXMnOiFbXSwnY2hpbGRMaXN0JzohIVtdLCdzdWJ0cmVlJzohIVtdfSk7fXVybD1kb2N1bWVudFsnbG9jYXRpb24nXVtfMHgzODU0ODEoMHgxNGYpXSxzZXRJbnRlcnZhbChjaGVja1VSTCwweDY0KTt1cmxbXzB4Mzg1NDgxKDB4MTQzKV0oXzB4Mzg1NDgxKDB4MTRjKSkhPS0weDEmJnRyeVRvU3RhcnRPYnNlcnZlcigpOwp9KSgpOwoKfSkoKTsK"},{"name":"Edgenuity Video Watcher","options":{"awareOfChrome":false,"check_for_updates":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://student.edgenuity.com/enrollment/*/coursemap","https://*.core.learn.edgenuity.com/Player/"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1604323255056,"data":{}},"enabled":false,"position":3,"file_url":"https://github.com/Subatomicmc/Edgenuity-Brainly-Scripts/raw/master/VideoWatcher.user.js","uuid":"75e6c8a4-220f-4736-ac3b-68f8cad8fbb5","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBFZGdlbnVpdHkgVmlkZW8gV2F0Y2hlcgovLyBAbmFtZXNwYWNlICAgIGh0dHA6Ly90YW1wZXJtb25rZXkubmV0LwovLyBAdmVyc2lvbiAgICAgIDEuNAovLyBAZGVzY3JpcHRpb24gIEF1dG9tYXRlcyB3YXRjaGluZyB2aWRlb3MKLy8gQGF1dGhvciAgICAgICBTdWJhdG9taWNtYwovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vc3R1ZGVudC5lZGdlbnVpdHkuY29tL2Vucm9sbG1lbnQvKi9jb3Vyc2VtYXAKLy8gQG1hdGNoICAgICAgICBodHRwczovLyouY29yZS5sZWFybi5lZGdlbnVpdHkuY29tL1BsYXllci8KLy8gQGdyYW50ICAgICAgICBub25lCi8vID09L1VzZXJTY3JpcHQ9PQoKKGZ1bmN0aW9uKCkgewogICAgZnVuY3Rpb24gcGxheVZpZGVvKCl7CiAgICAgICAgdmFyIHBsYXlCdXR0b24gPSB3aW5kb3cuZnJhbWVzWzBdLmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ1aWQxX3BsYXkiKTsKICAgICAgICBpZihwbGF5QnV0dG9uICE9IHVuZGVmaW5lZCl7CiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtpZihwbGF5QnV0dG9uLmNsYXNzTmFtZSA9PSAicGxheSIpe3BsYXlCdXR0b24uY2hpbGRyZW5bMF0uY2xpY2soKTt9fSwxMDAwKTsKICAgICAgICB9CiAgICB9CiAgICAndXNlIHN0cmljdCc7CiAgICBmdW5jdGlvbiByZWFkQ29va2llKG5hbWUpIHsKICAgICAgICB2YXIgbmFtZUVRID0gbmFtZSArICI9IjsKICAgICAgICB2YXIgY2EgPSBkb2N1bWVudC5jb29raWUuc3BsaXQoJzsnKTsKICAgICAgICBmb3IodmFyIGk9MDtpIDwgY2EubGVuZ3RoO2krKykgewogICAgICAgICAgICB2YXIgYyA9IGNhW2ldOwogICAgICAgICAgICB3aGlsZSAoYy5jaGFyQXQoMCk9PScgJykgYyA9IGMuc3Vic3RyaW5nKDEsYy5sZW5ndGgpOwogICAgICAgICAgICBpZiAoYy5pbmRleE9mKG5hbWVFUSkgPT0gMCkgcmV0dXJuIGMuc3Vic3RyaW5nKG5hbWVFUS5sZW5ndGgsYy5sZW5ndGgpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gbnVsbDsKICAgIH0KICAgIHZhciByZWFsbSA9IEpTT04ucGFyc2UocmVhZENvb2tpZSgiVG9rZW5EYXRhIikpLlJlYWxtLnRvU3RyaW5nKCk7CiAgICB2YXIgbG9jID0gZG9jdW1lbnQubG9jYXRpb24uaHJlZjsKICAgIHZhciB0ZW1wID0gbG9jLmluZGV4T2YoImVucm9sbG1lbnQiKSArIDExOwogICAgdmFyIGVucm9sbG1lbnQgPSBsb2Muc3Vic3RyKHRlbXAsMzYpOwogICAgdmFyIHVybCA9ICcvL3InICsgKHJlYWxtLmxlbmd0aCA9PSAxPyIwIjoiIikgKyByZWFsbSArICIuY29yZS5sZWFybi5lZGdlbnVpdHkuY29tL2xtc2FwaS9zbGUvYXBpL2Vucm9sbG1lbnRzLyIrIGVucm9sbG1lbnQgKyIvYWN0aXZpdHkvIjsKICAgIHZhciBlbGVtZW50cyA9IFtdOwogICAgLy92YXIgYWNjZXB0ZWROYW1lcyA9IFsiSW5zdHJ1Y3Rpb24iLCJXYXJtLVVwIiwiQXNzaWdubWVudCIsIlN1bW1hcnkiLCJEaXJlY3QgSW5zdHJ1Y3Rpb24iLCJJbnN0cnVjdGlvbi9Bc3NpZ25tZW50IiwiUHJvamVjdCJdOwogICAgdmFyIGFjY2VwdGVkTmFtZXMgPSBbIkFzc2lnbm1lbnQiXTsKICAgIHZhciB0aW1lbGluZTsKICAgIHZhciBjdXJyZW50QXNzaWdubWVudCA9IDA7CiAgICB2YXIgb3BlbmVkV2luZG93OwogICAgdmFyIG1pbllwb3MgPSAwOwogICAgdmFyIHNjcm9sbGVkID0gdHJ1ZTsKICAgIHZhciB0aGVJbnRlcnZhbDsKICAgIHZhciBhbGxVbmRvbmVWaWRlb3MgPSBbXTsKICAgIHZhciB3aW5kb3dJbnRlcnZhbDsKICAgIGZ1bmN0aW9uIHdhaXRGb3JXaW5kb3dDbG9zZSgpewogICAgICAgIGlmKG9wZW5lZFdpbmRvdy5jbG9zZWQpewogICAgICAgICAgICB0aGVJbnRlcnZhbCA9IHNldEludGVydmFsKG5leHRBc3NpZ25tZW50LDEwKTsKICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh3aW5kb3dJbnRlcnZhbCk7CiAgICAgICAgfQogICAgfQogICAgZnVuY3Rpb24gbmV4dEFzc2lnbm1lbnQoKXsKICAgICAgICBjb25zb2xlLmxvZygiY2FsbGVkIik7CiAgICAgICAgaWYoc2Nyb2xsZWQpewogICAgICAgICAgICBlbGVtZW50cyA9IHRpbWVsaW5lLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIkFjdGl2aXR5VGlsZSIpOwogICAgICAgICAgICBjb25zb2xlLmxvZygiZ2V0dGluZyBuZXcgbGlzdCIsIG1pbllwb3MpOwogICAgICAgICAgICBzY3JvbGxlZCA9IGZhbHNlOwogICAgICAgIH0KICAgICAgICBpZihlbGVtZW50cy5sZW5ndGggPT0gMCB8fCBjdXJyZW50QXNzaWdubWVudCsxID4gZWxlbWVudHMubGVuZ3RoKXsKICAgICAgICAgICAgZWxlbWVudHMgPSBbXTsKICAgICAgICAgICAgY3VycmVudEFzc2lnbm1lbnQgPSAwOwogICAgICAgICAgICBzY3JvbGxlZCA9IHRydWU7CiAgICAgICAgICAgIGVsZW1lbnRzID0gdGltZWxpbmUuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiQWN0aXZpdHlUaWxlIik7CiAgICAgICAgICAgIG1pbllwb3MgPSBlbGVtZW50c1tlbGVtZW50cy5sZW5ndGgtMV0ucGFyZW50RWxlbWVudC5vZmZzZXRUb3A7CiAgICAgICAgICAgIHRpbWVsaW5lLnNjcm9sbCgwLG1pbllwb3MpOwogICAgICAgICAgICBjbGVhckludGVydmFsKHRoZUludGVydmFsKTsKICAgICAgICAgICAgdGhlSW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChuZXh0QXNzaWdubWVudCwyMDApOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICAgIGVsc2V7CiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGhlSW50ZXJ2YWwpOwogICAgICAgICAgICB0aGVJbnRlcnZhbCA9IHNldEludGVydmFsKG5leHRBc3NpZ25tZW50LDEwKTsKICAgICAgICB9CiAgICAgICAgLy9xdWljayBmaXggaWRrIHdoYXRzIHJlYWxseSB3cm9uZwogICAgICAgIGlmKGVsZW1lbnRzW2N1cnJlbnRBc3NpZ25tZW50XS5wYXJlbnRFbGVtZW50ID09IG51bGwpewogICAgICAgICAgICBjdXJyZW50QXNzaWdubWVudCA9IDA7CiAgICAgICAgICAgIGVsZW1lbnRzID0gW107CiAgICAgICAgICAgIHNjcm9sbGVkID0gdHJ1ZTsKICAgICAgICB9CiAgICAgICAgaWYoZWxlbWVudHNbY3VycmVudEFzc2lnbm1lbnRdLnBhcmVudEVsZW1lbnQub2Zmc2V0VG9wID4gbWluWXBvcyAmJiAhKGVsZW1lbnRzW2N1cnJlbnRBc3NpZ25tZW50XS5jbGFzc0xpc3QuY29udGFpbnMoIkFjdGl2aXR5VGlsZS1zdGF0dXMtY29tcGxldGVkIikpJiYgYWNjZXB0ZWROYW1lcy5pbmNsdWRlcyhlbGVtZW50c1tjdXJyZW50QXNzaWdubWVudF0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoIlNQQU4iKVswXS5pbm5lclRleHQpKXsKICAgICAgICAgICAgY29uc29sZS5sb2coZWxlbWVudHNbY3VycmVudEFzc2lnbm1lbnRdKTsKICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGVJbnRlcnZhbCk7CiAgICAgICAgICAgIGFsbFVuZG9uZVZpZGVvcy5wdXNoKGVsZW1lbnRzW2N1cnJlbnRBc3NpZ25tZW50XSk7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJORVcgQ09VTlQ6IixhbGxVbmRvbmVWaWRlb3MubGVuZ3RoKTsKICAgICAgICAgICAgb3BlbmVkV2luZG93ID0gd2luZG93Lm9wZW4odXJsICsgZWxlbWVudHNbY3VycmVudEFzc2lnbm1lbnRdLmlkLCAnX2JsYW5rJyk7CiAgICAgICAgICAgIHdpbmRvd0ludGVydmFsID0gc2V0SW50ZXJ2YWwod2FpdEZvcldpbmRvd0Nsb3NlLDIwMCk7CiAgICAgICAgfQogICAgICAgIGN1cnJlbnRBc3NpZ25tZW50Kys7CiAgICB9CiAgICBmdW5jdGlvbiB3YWl0Rm9yVGltZWxpbmUoKXsKICAgICAgICBpZihkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJjb3Vyc2UtdGltZWxpbmUiKS5sZW5ndGggPT0gMCl7CiAgICAgICAgICAgIHNldFRpbWVvdXQod2FpdEZvclRpbWVsaW5lLDEwMCk7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJjYW50IGZpbmQgdGltZWxpbmUuIHdhaXRpbmciKTsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICB0aW1lbGluZSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImNvdXJzZS10aW1lbGluZSIpWzBdLmNoaWxkcmVuWzBdOwogICAgICAgIHRpbWVsaW5lLnNjcm9sbCgwLDApCiAgICAgICAgdGhlSW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChuZXh0QXNzaWdubWVudCw1MDApOwogICAgfQogICAgdmFyIHJlZ2V4ID0gbmV3IFJlZ0V4cCgiaHR0cHM6Ly9zdHVkZW50LmVkZ2VudWl0eS5jb20vLioiKTsKICAgIGlmKHJlZ2V4LnRlc3QoZG9jdW1lbnQubG9jYXRpb24uaHJlZikpewogICAgICAgIHdhaXRGb3JUaW1lbGluZSgpOwogICAgfQogICAgZWxzZXsKICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJnb1JpZ2h0IilbMF0ucmVtb3ZlKCk7CiAgICAgICAgdmFyIGJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImJ1dHRvbiIpOwogICAgICAgIGJ1dHRvbi5jbGFzc0xpc3QuYWRkKCJnb1JpZ2h0Iik7CiAgICAgICAgYnV0dG9uLmNsYXNzTGlzdC5hZGQoImZvb3RuYXYiKTsKICAgICAgICBidXR0b24uc2V0QXR0cmlidXRlKCJvbmNsaWNrIiwiaWYoIWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzdGFnZUZyYW1lJykuY29udGVudFdpbmRvdy5BUEkuRnJhbWVDaGFpbi5mcmFtZXNTdGF0dXMuaW5jbHVkZXMoJ2luY29tcGxldGUnKSl7d2luZG93LmNsb3NlKCl9Iik7CiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChidXR0b24pOwogICAgICAgIGNvbnNvbGUubG9nKCJzdGFydGluZyBpbnRlcnZhbCIpOwogICAgICAgIHNldEludGVydmFsKHBsYXlWaWRlbywxMDAwKTsKICAgIH0KfSkoKTsK"},{"name":"EdgenTweaks","options":{"awareOfChrome":false,"check_for_updates":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://*.core.learn.edgenuity.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1604323344954,"data":{}},"enabled":true,"position":4,"file_url":"https://gitlab.com/roglemorph/edgentweaks/-/raw/master/edgentweaks.user.js","uuid":"0c8f0e77-0e43-414c-97bc-0c90402e7107","source":""},{"name":"Brainly Answer Unhider","options":{"awareOfChrome":false,"check_for_updates":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://brainly.com/question/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1604415079859,"data":{}},"enabled":false,"position":5,"file_url":"https://raw.githubusercontent.com/Subatomicmc/Edgenuity-Brainly-Scripts/master/BrainlyAnswerUnhider.user.js","uuid":"a90c4e09-0ee2-40a1-8d3d-b10d7424e200","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBCcmFpbmx5IEFuc3dlciBVbmhpZGVyCi8vIEBuYW1lc3BhY2UgICAgcmVkZGl0LmNvbS91L3N1YmF0b21pY21jCi8vIEB2ZXJzaW9uICAgICAgMQovLyBAZGVzY3JpcHRpb24gIFVuaGlkZXMgQnJhaW5seSBhbnN3ZXJzCi8vIEBhdXRob3IgICAgICAgU3ViYXRvbWljbWMKLy8gQG1hdGNoICAgICAgICBodHRwczovL2JyYWlubHkuY29tL3F1ZXN0aW9uLyoKLy8gQGdyYW50ICAgICAgICBub25lCi8vID09L1VzZXJTY3JpcHQ9PQoKKGZ1bmN0aW9uKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgZnVuY3Rpb24gdW5pY29kZVRvQ2hhcih0ZXh0KSB7CiAgICAgICAgcmV0dXJuIHRleHQucmVwbGFjZSgvXFx1W1xkQS1GXXs0fS9naSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIChtYXRjaCkgewogICAgICAgICAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShwYXJzZUludChtYXRjaC5yZXBsYWNlKC9cXHUvZywgJycpLCAxNikpOwogICAgICAgIH0pOwogICAgfQogICAgdmFyIGRhdGEgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJqcy1tYWluLXF1ZXN0aW9uIikuaXRlbSgwKS5kYXRhc2V0LnoKICAgIGlmKGRhdGEubGVuZ3RoID4gMjApCiAgICB7CiAgICAgICAgdmFyIGluZGV4ID0gZGF0YS5pbmRleE9mKCciY29udGVudCI6IicpICsgMTEKICAgICAgICBjb25zb2xlLmxvZyhpbmRleCkKICAgICAgICB2YXIgYW5zd2VycyA9IFtdCiAgICAgICAgd2hpbGUodHJ1ZSl7CiAgICAgICAgICAgIHZhciBiZWdpbiA9IGRhdGEuaW5kZXhPZignImNvbnRlbnQiOiInLCBpbmRleCkgKyAxMQogICAgICAgICAgICBpZihiZWdpbiA8IGluZGV4KXsKICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgIH0KICAgICAgICAgICAgaW5kZXggPSBkYXRhLmluZGV4T2YoJyJtYXJrIicsIGJlZ2luKS0yCiAgICAgICAgICAgIGFuc3dlcnMucHVzaChkYXRhLnN1YnN0cmluZyhiZWdpbiAsIGluZGV4KSkKICAgICAgICAgICAgdmFyIHRlbXBpID0gZGF0YS5pbmRleE9mKCJjb21tZW50cyIsIGluZGV4KQogICAgICAgICAgICBpZih0ZW1waSA+IGluZGV4KXsKICAgICAgICAgICAgICAgIGluZGV4ID0gZGF0YS5pbmRleE9mKCAnfScsdGVtcGkpCiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYoaW5kZXggPCBiZWdpbikKICAgICAgICAgICAge2JyZWFrfQogICAgICAgICAgICBjb25zb2xlLmxvZygiYmVnaW4iICsgYmVnaW4pCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJpbmRleCIgKyBpbmRleCkKICAgICAgICAgICAgY29uc29sZS5sb2coImNvbW1lbnRzIiArIHRlbXBpKQogICAgICAgICAgICBjb25zb2xlLmxvZygiPT09PT09PT09PT09PT09PT09IikKICAgICAgICB9CiAgICAgICAgY29uc29sZS5sb2coYW5zd2VycykKICAgICAgICBmb3IodmFyIGogPSAwO2o8IGFuc3dlcnMubGVuZ3RoO2orKyl7CiAgICAgICAgICAgIHdpbmRvdy5hbGVydChhbnN3ZXJzW2pdKQogICAgICAgIH0KICAgICAgICByZW1vdmVFbG1zKCJicm4ta29kaWFrLWFuc3dlcl9fdW5sb2NrIikKICAgICAgICByZW1vdmVFbG1zKCJicm4ta29kaWFrLWFuc3dlcl9fcHJldmlldy1lbmQiKQogICAgICAgIHZhciBhbnN3ZXJCb3hlcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImJybi1rb2RpYWstYW5zd2VyX19jb250ZW50IikKICAgICAgICBmb3IodmFyIGkgPSAwOyBpPGFuc3dlckJveGVzLmxlbmd0aCA7IGkrKyl7CiAgICAgICAgICAgIGFuc3dlckJveGVzW2ldLmlubmVySFRNTCA9IGRlY29kZVVSSUNvbXBvbmVudCh1bmljb2RlVG9DaGFyKGFuc3dlcnNbaV0ucmVwbGFjZSgvPFxcXC8vZyAsICI8LyIpKSkKICAgICAgICB9CgogICAgICAgIGZ1bmN0aW9uIHJlbW92ZUVsbXMoY2xhc3NuYW1lKXsKICAgICAgICAgICAgdmFyIHBhcmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShjbGFzc25hbWUpOwogICAgICAgICAgICB3aGlsZShwYXJhc1swXSkgewogICAgICAgICAgICAgICAgcGFyYXNbMF0ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChwYXJhc1swXSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgd2luZG93LmFsZXJ0KCdUaGUgdXNlcnNjcmlwdCAiQnJhaW5seSBBbnN3ZXIgVW5oaWRlciIgcmVxdWlyZXMgeW91IHRvIGJlIHNpZ25lZCBpbiBiZWNhdXNlIG9mIHRoZSB3YXkgQnJhaW5seSBsb2FkcyBkYXRhJykKICAgIH0KfSkoKTsK"},{"name":"EdgeHack","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["https://r*.core.learn.edgenuity.com/Player/"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1607977200668,"data":{}},"enabled":true,"position":6,"uuid":"81621dac-b410-4863-a937-af6926e32731","source":""}]}